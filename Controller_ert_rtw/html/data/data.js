var dataJson = {"arch":{"ispc":true,"isunix":false,"ismac":false},"build":"SILBlock/Controller","ref":false,"files":[{"name":"ert_main.c","type":"source","group":"main","path":"C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw","tag":"","groupDisplay":"メイン ファイル","code":"/*\r\n * File: ert_main.c\r\n *\r\n * Code generated for Simulink model 'Controller'.\r\n *\r\n * Model version                  : 6.0\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Wed Jul  5 15:30:04 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include <stddef.h>\r\n#include <stdio.h>            /* This example main program uses printf/fflush */\r\n#include \"Controller.h\"                /* Model header file */\r\n\r\n/*\r\n * Associating rt_OneStep with a real-time clock or interrupt service routine\r\n * is what makes the generated code \"real-time\".  The function rt_OneStep is\r\n * always associated with the base rate of the model.  Subrates are managed\r\n * by the base rate from inside the generated code.  Enabling/disabling\r\n * interrupts and floating point context switches are target specific.  This\r\n * example code indicates where these should take place relative to executing\r\n * the generated code step function.  Overrun behavior should be tailored to\r\n * your application needs.  This example simply sets an error status in the\r\n * real-time model and returns from rt_OneStep.\r\n */\r\nvoid rt_OneStep(void);\r\nvoid rt_OneStep(void)\r\n{\r\n  static boolean_T OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n\r\n  /* Check for overrun */\r\n  if (OverrunFlag) {\r\n    rtmSetErrorStatus(rtM, \"Overrun\");\r\n    return;\r\n  }\r\n\r\n  OverrunFlag = true;\r\n\r\n  /* Save FPU context here (if necessary) */\r\n  /* Re-enable timer or interrupt here */\r\n  /* Set model inputs here */\r\n\r\n  /* Step the model */\r\n  Controller_step();\r\n\r\n  /* Get model outputs here */\r\n\r\n  /* Indicate task complete */\r\n  OverrunFlag = false;\r\n\r\n  /* Disable interrupts here */\r\n  /* Restore FPU context here (if necessary) */\r\n  /* Enable interrupts here */\r\n}\r\n\r\n/*\r\n * The example main function illustrates what is required by your\r\n * application code to initialize, execute, and terminate the generated code.\r\n * Attaching rt_OneStep to a real-time clock is target specific. This example\r\n * illustrates how you do this relative to initializing the model.\r\n */\r\nint_T main(int_T argc, const char *argv[])\r\n{\r\n  /* Unused arguments */\r\n  (void)(argc);\r\n  (void)(argv);\r\n\r\n  /* Initialize model */\r\n  Controller_initialize();\r\n\r\n  /* Attach rt_OneStep to a timer or interrupt service routine with\r\n   * period 0.01 seconds (base rate of the model) here.\r\n   * The call syntax for rt_OneStep is\r\n   *\r\n   *  rt_OneStep();\r\n   */\r\n  printf(\"Warning: The simulation will run forever. \"\r\n         \"Generated ERT main won't simulate model step behavior. \"\r\n         \"To change this behavior select the 'MAT-file logging' option.\\n\");\r\n  fflush((NULL));\r\n  while (rtmGetErrorStatus(rtM) == (NULL)) {\r\n    /*  Perform application tasks here */\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Controller.c","type":"source","group":"model","path":"C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw","tag":"","groupDisplay":"モデル ファイル","code":"/*\r\n * File: Controller.c\r\n *\r\n * Code generated for Simulink model 'Controller'.\r\n *\r\n * Model version                  : 6.0\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Wed Jul  5 15:30:04 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#include \"Controller.h\"\r\n#include \"rtwtypes.h\"\r\n\r\n/* Block signals and states (default storage) */\r\nD_Work rtDWork;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nExternalInputs rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nExternalOutputs rtY;\r\n\r\n/* Real-time model */\r\nstatic RT_MODEL rtM_;\r\nRT_MODEL *const rtM = &rtM_;\r\n\r\n/* Model step function */\r\nvoid Controller_step(void)\r\n{\r\n  real32_T rtb_Sum2;\r\n  real32_T rtb_UnitDelay1;\r\n  real32_T rtb_UnitDelay2;\r\n\r\n  /* Outputs for Atomic SubSystem: '<Root>/Controller' */\r\n  /* UnitDelay: '<S1>/Unit Delay1' */\r\n  rtb_UnitDelay1 = rtDWork.UnitDelay1_DSTATE;\r\n\r\n  /* UnitDelay: '<S1>/Unit Delay2' */\r\n  rtb_UnitDelay2 = rtDWork.UnitDelay2_DSTATE;\r\n\r\n  /* Sum: '<S1>/Sum2' incorporates:\r\n   *  Gain: '<S1>/Gain2'\r\n   *  Gain: '<S1>/Gain3'\r\n   *  Gain: '<S1>/Gain4'\r\n   *  Sum: '<S1>/Sum3'\r\n   *  UnitDelay: '<S1>/Unit Delay1'\r\n   *  UnitDelay: '<S1>/Unit Delay2'\r\n   *  UnitDelay: '<S1>/Unit Delay3'\r\n   */\r\n  rtb_Sum2 = (0.25F * rtDWork.UnitDelay3_DSTATE + 0.25F *\r\n              rtDWork.UnitDelay2_DSTATE) + 0.25F * rtDWork.UnitDelay1_DSTATE;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay1' incorporates:\r\n   *  Inport: '<Root>/In1'\r\n   */\r\n  rtDWork.UnitDelay1_DSTATE = rtU.In1;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay2' */\r\n  rtDWork.UnitDelay2_DSTATE = rtb_UnitDelay1;\r\n\r\n  /* Update for UnitDelay: '<S1>/Unit Delay3' */\r\n  rtDWork.UnitDelay3_DSTATE = rtb_UnitDelay2;\r\n\r\n  /* Outport: '<Root>/Out1' incorporates:\r\n   *  Gain: '<S1>/Gain1'\r\n   *  Inport: '<Root>/In1'\r\n   *  Sum: '<S1>/Sum1'\r\n   */\r\n  rtY.Out1 = 0.25F * rtU.In1 + rtb_Sum2;\r\n\r\n  /* End of Outputs for SubSystem: '<Root>/Controller' */\r\n}\r\n\r\n/* Model initialize function */\r\nvoid Controller_initialize(void)\r\n{\r\n  /* (no initialization code required) */\r\n}\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"Controller.h","type":"header","group":"model","path":"C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw","tag":"","groupDisplay":"モデル ファイル","code":"/*\r\n * File: Controller.h\r\n *\r\n * Code generated for Simulink model 'Controller'.\r\n *\r\n * Model version                  : 6.0\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Wed Jul  5 15:30:04 2023\r\n *\r\n * Target selection: ert.tlc\r\n * Embedded hardware selection: ARM Compatible->ARM Cortex\r\n * Code generation objectives: Unspecified\r\n * Validation result: Not run\r\n */\r\n\r\n#ifndef RTW_HEADER_Controller_h_\r\n#define RTW_HEADER_Controller_h_\r\n#ifndef Controller_COMMON_INCLUDES_\r\n#define Controller_COMMON_INCLUDES_\r\n#include \"rtwtypes.h\"\r\n#include \"rtw_continuous.h\"\r\n#include \"rtw_solver.h\"\r\n#endif                                 /* Controller_COMMON_INCLUDES_ */\r\n\r\n/* Macros for accessing real-time model data structure */\r\n#ifndef rtmGetErrorStatus\r\n#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)\r\n#endif\r\n\r\n#ifndef rtmSetErrorStatus\r\n#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))\r\n#endif\r\n\r\n/* Forward declaration for rtModel */\r\ntypedef struct tag_RTM RT_MODEL;\r\n\r\n/* Block signals and states (default storage) for system '<Root>' */\r\ntypedef struct {\r\n  real32_T UnitDelay1_DSTATE;          /* '<S1>/Unit Delay1' */\r\n  real32_T UnitDelay2_DSTATE;          /* '<S1>/Unit Delay2' */\r\n  real32_T UnitDelay3_DSTATE;          /* '<S1>/Unit Delay3' */\r\n} D_Work;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\ntypedef struct {\r\n  real32_T In1;                        /* '<Root>/In1' */\r\n} ExternalInputs;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\ntypedef struct {\r\n  real32_T Out1;                       /* '<Root>/Out1' */\r\n} ExternalOutputs;\r\n\r\n/* Real-time Model Data Structure */\r\nstruct tag_RTM {\r\n  const char_T * volatile errorStatus;\r\n};\r\n\r\n/* Block signals and states (default storage) */\r\nextern D_Work rtDWork;\r\n\r\n/* External inputs (root inport signals with default storage) */\r\nextern ExternalInputs rtU;\r\n\r\n/* External outputs (root outports fed by signals with default storage) */\r\nextern ExternalOutputs rtY;\r\n\r\n/* Model entry point functions */\r\nextern void Controller_initialize(void);\r\nextern void Controller_step(void);\r\n\r\n/* Real-time Model object */\r\nextern RT_MODEL *const rtM;\r\n\r\n/*-\r\n * The generated code includes comments that allow you to trace directly\r\n * back to the appropriate location in the model.  The basic format\r\n * is <system>/block_name, where system is the system number (uniquely\r\n * assigned by Simulink) and block_name is the name of the block.\r\n *\r\n * Note that this particular code originates from a subsystem build,\r\n * and has its own system numbers different from the parent model.\r\n * Refer to the system hierarchy for this subsystem below, and use the\r\n * MATLAB hilite_system command to trace the generated code back\r\n * to the parent model.  For example,\r\n *\r\n * hilite_system('SILBlock/Controller')    - opens subsystem SILBlock/Controller\r\n * hilite_system('SILBlock/Controller/Kp') - opens and selects block Kp\r\n *\r\n * Here is the system hierarchy for this model\r\n *\r\n * '<Root>' : 'SILBlock'\r\n * '<S1>'   : 'SILBlock/Controller'\r\n */\r\n#endif                                 /* RTW_HEADER_Controller_h_ */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"},{"name":"rtwtypes.h","type":"header","group":"sharedutility","path":"C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\slprj\\ert\\_sharedutils","tag":"","groupDisplay":"共有ファイル","code":"/*\r\n * File: rtwtypes.h\r\n *\r\n * Code generated for Simulink model 'Controller'.\r\n *\r\n * Model version                  : 6.0\r\n * Simulink Coder version         : 9.8 (R2022b) 13-May-2022\r\n * C/C++ source code generated on : Wed Jul  5 15:30:04 2023\r\n */\r\n\r\n#ifndef RTWTYPES_H\r\n#define RTWTYPES_H\r\n\r\n/* Logical type definitions */\r\n#if (!defined(__cplusplus))\r\n#ifndef false\r\n#define false                          (0U)\r\n#endif\r\n\r\n#ifndef true\r\n#define true                           (1U)\r\n#endif\r\n#endif\r\n\r\n/*=======================================================================*\r\n * Target hardware information\r\n *   Device type: ARM Compatible->ARM Cortex\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       native word size:  32\r\n *   Byte ordering: LittleEndian\r\n *   Signed integer division rounds to: Zero\r\n *   Shift right on a signed integer as arithmetic shift: on\r\n *=======================================================================*/\r\n#ifdef PORTABLE_WORDSIZES              /* PORTABLE_WORDSIZES defined */\r\n\r\n/*=======================================================================*\r\n * Host information\r\n *   Number of bits:     char:   8    short:   16    int:  32\r\n *                       long:  32\r\n *                       long long:  64\r\n *                       native word size:  64\r\n *=======================================================================*/\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned int ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n#else                                  /* PORTABLE_WORDSIZES not defined */\r\n\r\n/*=======================================================================*\r\n * Fixed width word size data types:                                     *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *   real32_T, real64_T           - 32 and 64 bit floating point numbers *\r\n *=======================================================================*/\r\ntypedef signed char int8_T;\r\ntypedef unsigned char uint8_T;\r\ntypedef short int16_T;\r\ntypedef unsigned short uint16_T;\r\ntypedef int int32_T;\r\ntypedef unsigned int uint32_T;\r\ntypedef float real32_T;\r\ntypedef double real64_T;\r\n\r\n/*===========================================================================*\r\n * Generic type definitions: boolean_T, char_T, byte_T, int_T, uint_T,       *\r\n *                           real_T, time_T, ulong_T.                        *\r\n *===========================================================================*/\r\ntypedef double real_T;\r\ntypedef double time_T;\r\ntypedef unsigned char boolean_T;\r\ntypedef int int_T;\r\ntypedef unsigned int uint_T;\r\ntypedef unsigned long ulong_T;\r\ntypedef char char_T;\r\ntypedef unsigned char uchar_T;\r\ntypedef char_T byte_T;\r\n\r\n#endif                                 /* PORTABLE_WORDSIZES */\r\n\r\n/*=======================================================================*\r\n * Min and Max:                                                          *\r\n *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *\r\n *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *\r\n *=======================================================================*/\r\n#define MAX_int8_T                     ((int8_T)(127))\r\n#define MIN_int8_T                     ((int8_T)(-128))\r\n#define MAX_uint8_T                    ((uint8_T)(255U))\r\n#define MAX_int16_T                    ((int16_T)(32767))\r\n#define MIN_int16_T                    ((int16_T)(-32768))\r\n#define MAX_uint16_T                   ((uint16_T)(65535U))\r\n#define MAX_int32_T                    ((int32_T)(2147483647))\r\n#define MIN_int32_T                    ((int32_T)(-2147483647-1))\r\n#define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))\r\n\r\n/* Block D-Work pointer type */\r\ntypedef void * pointer_T;\r\n\r\n#endif                                 /* RTWTYPES_H */\r\n\r\n/*\r\n * File trailer for generated code.\r\n *\r\n * [EOF]\r\n */\r\n"}],"trace":"{\"model\":\"Controller\",\"sources\":[\"Controller.c\",\"Controller.h\"],\"categoricalProps\":[\"ModelElemCategory\",\"StorageClass\"],\"categoricalValues\":[\"InternalData\",\"Default\",\"Inports\",\"Outports\"],\"sidPrefixes\":[\"Controller\"],\"fileRecords\":{\"1\":{\"records\":[{\"tk\":[39,3,39,11],\"els\":[\"1:10\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[39,12,39,29],\"els\":[\"1:10\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[39,29,39,30],\"els\":[\"1:10\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[40,3,40,11],\"els\":[\"1:11\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[40,12,40,29],\"els\":[\"1:11\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[40,29,40,30],\"els\":[\"1:11\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[41,3,41,11],\"els\":[\"1:12\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[41,12,41,29],\"els\":[\"1:12\"],\"ct\":{\"0\":0,\"1\":1}},{\"tk\":[41,29,41,30],\"els\":[\"1:12\"],\"ct\":{\"1\":1,\"0\":0}},{\"tk\":[46,3,46,11],\"els\":[\"1:28\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[46,12,46,15],\"els\":[\"1:28\"],\"ct\":{\"0\":2,\"1\":1}},{\"tk\":[46,15,46,16],\"els\":[\"1:28\"],\"ct\":{\"1\":1,\"0\":2}},{\"tk\":[51,3,51,11],\"els\":[\"1:29\"],\"ct\":{\"1\":1,\"0\":3}},{\"tk\":[51,12,51,16],\"els\":[\"1:29\"],\"ct\":{\"0\":3,\"1\":1}},{\"tk\":[51,16,51,17],\"els\":[\"1:29\"],\"ct\":{\"1\":1,\"0\":3}}]},\"0\":{\"records\":[{\"tk\":[41,3,41,17],\"els\":[\"0:10#out:1\"]},{\"tk\":[41,18,41,19],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[41,20,41,27],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[41,28,41,45],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[44,3,44,17],\"els\":[\"0:11#out:1\"]},{\"tk\":[44,18,44,19],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[44,20,44,27],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[44,28,44,45],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[55,3,55,11],\"els\":[\"0:8#out:1\"]},{\"tk\":[55,12,55,13],\"els\":[\"0:8\",\"0:1\"]},{\"tk\":[55,15,55,20],\"els\":[\"0:6\",\"0:1\"]},{\"tk\":[55,21,55,22],\"els\":[\"0:6\",\"0:1\"]},{\"tk\":[55,23,55,30],\"els\":[\"0:6\",\"0:1\",\"0:12\"]},{\"tk\":[55,31,55,48],\"els\":[\"0:6\",\"0:1\",\"0:12\"]},{\"tk\":[55,49,55,50],\"els\":[\"0:9\",\"0:1\"]},{\"tk\":[55,51,55,56],\"els\":[\"0:5\",\"0:1\"]},{\"tk\":[55,57,55,58],\"els\":[\"0:5\",\"0:1\"]},{\"tk\":[56,15,56,22],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[56,23,56,40],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[56,42,56,43],\"els\":[\"0:8\",\"0:1\"]},{\"tk\":[56,44,56,49],\"els\":[\"0:4\",\"0:1\"]},{\"tk\":[56,50,56,51],\"els\":[\"0:4\",\"0:1\"]},{\"tk\":[56,52,56,59],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[56,60,56,77],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[61,3,61,10],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[61,11,61,28],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[61,29,61,30],\"els\":[\"0:10\",\"0:1\"]},{\"tk\":[61,31,61,34],\"els\":[\"0:28\"]},{\"tk\":[61,35,61,38],\"els\":[\"0:28\"]},{\"tk\":[64,3,64,10],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[64,11,64,28],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[64,29,64,30],\"els\":[\"0:11\",\"0:1\"]},{\"tk\":[64,31,64,45],\"els\":[\"0:10#out:1\"]},{\"tk\":[67,3,67,10],\"els\":[\"0:12\",\"0:1\"]},{\"tk\":[67,11,67,28],\"els\":[\"0:12\",\"0:1\"]},{\"tk\":[67,29,67,30],\"els\":[\"0:12\",\"0:1\"]},{\"tk\":[67,31,67,45],\"els\":[\"0:11#out:1\"]},{\"tk\":[74,3,74,6],\"els\":[\"0:29\"]},{\"tk\":[74,7,74,11],\"els\":[\"0:29\"]},{\"tk\":[74,12,74,13],\"els\":[\"0:29\"]},{\"tk\":[74,14,74,19],\"els\":[\"0:3\",\"0:1\"]},{\"tk\":[74,20,74,21],\"els\":[\"0:3\",\"0:1\"]},{\"tk\":[74,22,74,25],\"els\":[\"0:28\"]},{\"tk\":[74,26,74,29],\"els\":[\"0:28\"]},{\"tk\":[74,30,74,31],\"els\":[\"0:7\",\"0:1\"]},{\"tk\":[74,32,74,40],\"els\":[\"0:8#out:1\"]}]}}}","blocks":[{"RTWName":"<S1>/In1","SIDString":"SILBlock:2"},{"RTWName":"<S1>/Gain1","SIDString":"SILBlock:3"},{"RTWName":"<S1>/Gain2","SIDString":"SILBlock:4"},{"RTWName":"<S1>/Gain3","SIDString":"SILBlock:5"},{"RTWName":"<S1>/Gain4","SIDString":"SILBlock:6"},{"RTWName":"<S1>/Sum1","SIDString":"SILBlock:7"},{"RTWName":"<S1>/Sum2","SIDString":"SILBlock:8"},{"RTWName":"<S1>/Sum3","SIDString":"SILBlock:9"},{"RTWName":"<S1>/Unit Delay1","SIDString":"SILBlock:10"},{"RTWName":"<S1>/Unit Delay2","SIDString":"SILBlock:11"},{"RTWName":"<S1>/Unit Delay3","SIDString":"SILBlock:12"},{"RTWName":"<S1>/Out1","SIDString":"SILBlock:13"},{"RTWName":"<Root>/Controller","SIDString":"SILBlock:1"}],"cm":{"GlobalVarInfo":[{"Name":"Controller.c:rtM_","Size":4,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":true,"IsBitField":false,"IsExported":true,"UseCount":0,"Members":{"Name":"errorStatus","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":0,"Members":[],"UseInFunctions":[]},"UseInFunctions":[]},{"Name":"rtDWork","Size":12,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":8,"Members":[{"Name":"UnitDelay1_DSTATE","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":3}},{"Name":"UnitDelay2_DSTATE","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":3,"Members":[],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":3}},{"Name":"UnitDelay3_DSTATE","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":2}}],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":8}},{"Name":"rtU","Size":4,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":2,"Members":{"Name":"In1","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":2,"Members":[],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":2}},"UseInFunctions":{"FunctionName":"Controller_step","UseCount":2}},{"Name":"rtY","Size":4,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":false,"IsBitField":false,"IsExported":true,"UseCount":1,"Members":{"Name":"Out1","File":2,"Size":4,"IsStatic":false,"IsBitField":false,"IsExported":false,"UseCount":1,"Members":[],"UseInFunctions":{"FunctionName":"Controller_step","UseCount":1}},"UseInFunctions":{"FunctionName":"Controller_step","UseCount":1}}],"GlobalConstInfo":[],"FcnInfo":[{"Name":"Controller_initialize","UniqueKey":"$Controller_initialize","Idx":1,"NumCommentLines":1,"NumTotalLines":4,"NumCodeLines":0,"Callee":[],"Caller":[],"Stack":0,"HasDefinition":1,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":0,"Complexity":1,"StackTotal":0,"CalleeIdx":[]},{"Name":"Controller_step","UniqueKey":"$Controller_step","Idx":2,"NumCommentLines":23,"NumTotalLines":45,"NumCodeLines":11,"Callee":[],"Caller":[],"Stack":12,"HasDefinition":1,"File":["C:\\Users\\SotaYuzaki\\Documents\\MATLAB\\Examples\\R2022b\\ecoder\\SILPILVerificationExample\\Controller_ert_rtw\\Controller.c"],"IsStatic":0,"Complexity":1,"StackTotal":12,"CalleeIdx":[]}]},"coverage":[{"id":"SimulinkCoverage","name":"Simulink Coverage","files":[]},{"id":"Bullseye","name":"Bullseye Coverage","files":[]},{"id":"LDRA","name":"LDRA Testbed","files":[]}],"features":{"annotation":false,"coverage":true,"profiling":true,"tooltip":true,"coverageTooltip":false,"showJustificationLinks":false,"showProfilingInfo":false,"showTaskSummary":false}};